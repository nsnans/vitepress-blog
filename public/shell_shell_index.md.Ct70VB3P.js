import{_ as s,c as i,o as a,a4 as n}from"./chunks/framework.B2INk3zo.js";const F=JSON.parse('{"title":"shell","description":"","frontmatter":{},"headers":[],"relativePath":"shell/shell/index.md","filePath":"shell/shell/index.md"}'),l={name:"shell/shell/index.md"},p=n(`<h1 id="shell" tabindex="-1">shell <a class="header-anchor" href="#shell" aria-label="Permalink to &quot;shell&quot;">​</a></h1><h2 id="按键" tabindex="-1">按键 <a class="header-anchor" href="#按键" aria-label="Permalink to &quot;按键&quot;">​</a></h2><ul><li><p><strong>Tab按键—命令补齐功能</strong></p></li><li><p><strong>Ctrl+c按键—停掉正在运行的程序</strong></p></li><li><p><strong>Ctrl+d按键—相当于exit，退出</strong></p></li><li><p><strong>Ctrl+l按键—清屏</strong></p></li></ul><h2 id="目录" tabindex="-1">目录 <a class="header-anchor" href="#目录" aria-label="Permalink to &quot;目录&quot;">​</a></h2><h3 id="目录切换-cd" tabindex="-1">目录切换 cd <a class="header-anchor" href="#目录切换-cd" aria-label="Permalink to &quot;目录切换 cd&quot;">​</a></h3><hr><blockquote><p>作用</p></blockquote><p>切换用户当前工作目录。</p><ul><li><p>切换工作目录至<code>dir</code>。其中<code>dir</code>的表示法可以是绝对路径或相对路径。</p></li><li><p>若参数<code>dir</code>省略，则默认为使用者的shell变量<code>HOME</code>。</p></li><li><p>如果<code>dir</code>指定为<code>~</code>时表示为使用者的shell变量<code>HOME</code>，<code>.</code>表示当前目录，<code>..</code>表示当前目录的上一级目录。</p></li><li><p>环境变量<code>CDPATH</code>是由冒号分割的一到多个目录，你可以将常去的目录的上一级加入到<code>CDPATH</code>以便方便访问它们；如果<code>dir</code>以<code>/</code>开头那么<code>CDPATH</code>不会被使用。</p></li><li><p>当<code>shopt</code>选项<code>cdable_vars</code>打开时，如果<code>dir</code>在<code>CDPATH</code>及当前目录下均不存在，那么会把它当作变量，读取它的值作为要进入的目录。</p></li></ul><hr><blockquote><p>语法</p></blockquote><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [-L</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[-P [-e]]] [dir]</span></span></code></pre></div><hr><blockquote><p>选项</p></blockquote><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-L</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> （默认值）如果要切换到的目标目录是一个符号连接，那么切换到符号连接的目录。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-P</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 如果要切换到的目标目录是一个符号连接，那么切换到它指向的物理位置目录。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  当前工作目录将被切换到环境变量OLDPWD所表示的目录，也就是前一个工作目录。</span></span></code></pre></div><hr><blockquote><p>参数</p></blockquote><p>dir（可选）：指定要切换到的目录。</p><hr><blockquote><p>例子</p></blockquote><div class="language-SH vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">SH</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 进入用户主目录；</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 进入根目录</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 进入用户主目录；</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ..</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 返回上级目录（若当前目录为“/“，则执行完后还在“/&quot;；&quot;..&quot;为上级目录的意思）；</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ../..</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 返回上两级目录；</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> !</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 把上个命令的参数作为cd参数使用。</span></span></code></pre></div><p>切换到上一个工作目录</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> -</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 命令会首先显示要切换到的目标目录，然后再进入。</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> \${OLDPWD}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 命令会直接切换到上一个工作目录。</span></span></code></pre></div><p>关于<code>CDPATH</code></p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 设置桌面文件夹作为CDPATH的值。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">CDPATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;~/Desktop&#39;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 假设我们接下来要演示涉及到的路径~和~/Desktop下没有test3文件夹，现在新建它们。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/test3</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/Desktop/test3</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 进入~目录。</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 进入test3目录。</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test3</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 执行后显示~/Desktop/test3并进入该目录，而不是~目录的test3目录。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 如果CDPATH存在值，那么优先在CDPATH中查找并进入第一个匹配成功的，如果全部失败那么最后尝试当前目录。</span></span></code></pre></div><p>关于<code>cdable_vars</code></p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 打开选项。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">shopt</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cdable_vars</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 假设当前路径以及CDPATH没有名为new_var的目录。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">new_var</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;~/Desktop&#39;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 尝试进入。</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> new_var</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 关闭选项。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">shopt</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -u</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cdable_vars</span></span></code></pre></div><hr><h3 id="目录查看-ls" tabindex="-1">目录查看 ls <a class="header-anchor" href="#目录查看-ls" aria-label="Permalink to &quot;目录查看 ls&quot;">​</a></h3><hr><blockquote><p>语法</p></blockquote><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ls</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [选项] [文件名...]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   [-1abcdfgiklmnopqrstuxABCDFGLNQRSUX] [-w cols] [-T cols] [-I pattern] [--full-time] </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   [--format</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{long,verbose,commas,across,vertical,single-col‐umn}] </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   [--sort</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{none,time,size,extension}] [--time</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{atime,access,use,ctime,status}] </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   [--color[</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{none,auto,always}]] [--help] [--version] [--]</span></span></code></pre></div><hr><blockquote><p>选项</p></blockquote><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-C</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     # 多列输出，纵向排序。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-F</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     # 每个目录名加 &quot;/&quot; 后缀，每个 FIFO 名加 &quot;|&quot; 后缀， 每个可运行名加“ * ”后缀。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-R</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     # 递归列出遇到的子目录。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-a</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     # 列出所有文件，包括以 &quot;.&quot; 开头的隐含文件。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-c</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     # 使用“状态改变时间”代替“文件修改时间”为依据来排序（使用“-t”选项时）或列出（使用“-l”选项时）。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-d</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     # 将目录名像其它文件一样列出，而不是列出它们的内容。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-i</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     # 输出文件前先输出文件系列号（即 i 节点号: i-node number）。 -l  列出（以单列格式）文件模式</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       # （file mode），文件的链接数，所有者名，组名，文件大小（以字节为单位），时间信息，及文件名。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       # 缺省时，时间信息显示最近修改时间；可以以选项“-c”和“-u”选择显示其它两种时间信息。对于设备文件，</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       # 原先显示文件大小的区域通常显示的是主要和次要的信号（majorand minor device numbers）。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-q</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     # 将文件名中的非打印字符输出为问号。（对于到终端的输出这是缺省的。）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-r</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     # 逆序排列。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-t</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     # 按时间信息排序。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-u</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     # 使用最近访问时间代替最近修改时间为依据来排序（使用“-t”选项时）或列出（使用“-l”选项时）。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-1</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     # 单列输出。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-1,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --format=single-column</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 一行输出一个文件（单列输出）。如标准输出不是到终端，此选项就是缺省选项。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-a,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --all</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 列出目录中所有文件，包括以“.”开头的文件。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-b,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --escape</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 把文件名中不可输出的字符用反斜杠加字符编号(就像在 C 语言里一样)的形式列出。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-c,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --time=ctime,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --time=status</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      # 按文件状态改变时间（i节点中的ctime）排序并输出目录内</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      # 容。如采用长格式输出（选项“-l”），使用文件的状态改</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      # 变时间取代文件修改时间。【译注：所谓文件状态改变（i节</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      # 点中以ctime标志），既包括文件被修改，又包括文件属性（ 如所有者、组、链接数等等）的变化】</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-d,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --directory</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      # 将目录名像其它文件一样列出，而不是列出它们的内容。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-f</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 不排序目录内容；按它们在磁盘上存储的顺序列出。同时启 动“ -a ”选项，如果在“ -f ”之前存在“ -l”、</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      # “ - -color ”或“ -s ”，则禁止它们。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-g</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 忽略，为兼容UNIX用。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-i,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --inode</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      # 在每个文件左边打印  i  节点号（也叫文件序列号和索引号:  file  serial  number and index num‐</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      # ber）。i节点号在每个特定的文件系统中是唯一的。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-k,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --kilobytes</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      # 如列出文件大小，则以千字节KB为单位。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-l,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --format=long,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --format=verbose</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      # 输出的信息从左到右依次包括文件名、文件类型、权限、硬链接数、所有者名、组名、大小（byte）</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      # 、及时间信息（如未指明是其它时间即指修改时间）。对于6个月以上的文件或超出未来</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      # 1小时的文件，时间信息中的时分将被年代取代。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      # 每个目录列出前，有一行“总块数”显示目录下全部文件所占的磁盘空间。块默认是1024字节；</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      # 如果设置了 POSIXLY_CORRECT 的环境变量，除非用“-k”选项，则默认块大小是 512 字节。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      # 每一个硬链接都计入总块数（因此可能重复计数），这无 疑是个缺点。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 列出的权限类似于以符号表示（文件）模式的规范。但是 ls</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      # 在每套权限的第三个字符中结合了多位（ multiple bits ） 的信息，如下： s 如果设置了  setuid</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      # 位或 setgid   位，而且也设置了相应的可执行位。 S 如果设置了 setuid 位或 setgid</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      # 位，但是没有设置相应的可执行位。 t 如果设置了  sticky  位，而且也设置了相应的可执行位。  T</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      # 如果设置了 sticky 位，但是没有设置相应的可执行位。              x</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      # 如果仅仅设置了可执行位而非以上四种情况。 - 其它情况（即可执行位未设置）。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-m,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --format=commas</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      # 水平列出文件，每行尽可能多，相互用逗号和一个空格分隔。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-n,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --numeric-uid-gid</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      # 列出数字化的 UID 和 GID 而不是用户名和组名。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-o</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    #  以长格式列出目录内容，但是不显示组信息。等于使用“         --format=long          --no-group</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      # ”选项。提供此选项是为了与其它版本的 ls 兼容。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-p</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    #  在每个文件名后附上一个字符以说明该文件的类型。类似“ -F ”选项但是不 标示可执行文件。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-q,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --hide-control-chars</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      # 用问号代替文件名中非打印的字符。这是缺省选项。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-r,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --reverse</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      # 逆序排列目录内容。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-s,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --size</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      # 在每个文件名左侧输出该文件的大小，以    1024   字节的块为单位。如果设置了   POSIXLY_CORRECT</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      # 的环境变量，除非用“ -k ”选项，块大小是 512 字节。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-t,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --sort=time</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      # 按文件最近修改时间（ i 节点中的 mtime ）而不是按文件名字典序排序，新文件 靠前。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-u,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --time=atime,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --time=access,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --time=use</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      # 类似选项“    -t    ”，但是用文件最近访问时间（    i     节点中的     atime     ）取代文件修</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      # 改时间。如果使用长格式列出，打印的时间是最近访问时间。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-w,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --width</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cols</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       # 假定屏幕宽度是      cols      （      cols     以实际数字取代）列。如未用此选项，缺省值是这</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       # 样获得的：如可能先尝试取自终端驱动，否则尝试取自环境变量          COLUMNS          （如果设</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       # 置了的话），都不行则取 80 。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-x,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --format=across,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --format=horizontal</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       # 多列输出，横向排序。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-A,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --almost-all</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       # 显示除 &quot;.&quot; 和 &quot;..&quot; 外的所有文件。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-B,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --ignore-backups</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       # 不输出以“ ~ ”结尾的备份文件，除非已经在命令行中给出。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-C,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --format=vertical</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       # 多列输出，纵向排序。当标准输出是终端时这是缺省项。使用命令名 dir 和 d 时， 则总是缺省的。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-D,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --dired</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       # 当采用长格式（“-l”选项）输出时，在主要输出后，额外打印一行：  //DIRED//  BEG1 END1 BEG2</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       # END2 ...</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># BEGn 和 ENDn 是无符号整数，记录每个文件名的起始、结束位置在输出中的位置（</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#        字节偏移量）。这使得          Emacs          易于找到文件名，即使文件名包含空格或换行等非正</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#        常字符也无需特异的搜索。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 如果目录是递归列出的（“ -R ”选项），每个子目录后列出类似一行：</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       # //SUBDIRED//  BEG1 END1 ...  【译注：我测试了 TurboLinux4.0 和 RedHat6.1 ，发现它们都是在 “</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       # //DIRED//     BEG1...     ”之后列出“     //SUBDIRED//     BEG1     ...      ”，也即只有一个</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       # 而不是在每个子目录后都有。而且“ //SUBDIRED// BEG1 ... ”列出的是各个子目 录名的偏移。】</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-F,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --classify,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --file-type</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       # 在每个文件名后附上一个字符以说明该文件的类型。“  * ”表示普通的可执行文件； “ / ”表示目录；“</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       # @ ”表示符号链接；“ | ”表示FIFOs；“ = ”表示套接字 (sockets) ；什么也没有则表示普通文件。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-G,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --no-group</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       # 以长格式列目录时不显示组信息。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-I,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --ignorepattern</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       # 除非在命令行中给定，不要列出匹配shell文件名匹配式（pattern ，不是指一般</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       # 表达式）的文件。在shell中，文件名以&quot;.&quot;起始的不与在文件名匹配式(pattern)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       # 开头的通配符匹配。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-L,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --dereference</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       # 列出符号链接指向的文件的信息，而不是符号链接本身。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-N,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --literal</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       # 不要用引号引起文件名。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-Q,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --quote-name</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       # 用双引号引起文件名，非打印字符以 C 语言的方法表示。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-R,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --recursive</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       # 递归列出全部目录的内容。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-S,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --sort=size</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       # 按文件大小而不是字典序排序目录内容，大文件靠前。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-T,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --tabsize</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cols</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       # 假定每个制表符宽度是 cols 。缺省为 8。为求效率， ls 可能在输出中使用制表符。  若 cols 为</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">       0，则不使用制表符。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-U,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --sort=none</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       # 不排序目录内容；按它们在磁盘上存储的顺序列出。（选项“-U”和“-f”的不</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       # 同是前者不启动或禁止相关的选项。）这在列很大的目录时特别有用，因为不加排序</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       # 能显著地加快速度。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-X,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --sort=extension</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       # 按文件扩展名（由最后的 &quot;.&quot; 之后的字符组成）的字典序排序。没有扩展名的先列 出。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">--color[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">=when]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       # 指定是否使用颜色区别文件类别。环境变量  LS_COLORS  指定使用的颜色。如何设置 这个变量见 dir‐</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       # colors(1) 。 when 可以被省略，或是以下几项之一：</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">none</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 不使用颜色，这是缺省项。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       # auto 仅当标准输出是终端时使用。 always 总是使用颜色。指定 --color 而且省略 when  时就等同于</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       # --color=always 。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">--full-time</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       # 列出完整的时间，而不是使用标准的缩写。格式如同          date(1)          的缺省格式；此格式</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       # 是不能改变的，但是你可以用 cut(1) 取出其中的日期字串并将结果送至命令 “ date -d ”。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 输出的时间包括秒是非常有用的。（ Unix 文件系统储存文件的时间信息精确到秒，</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       # 因此这个选项已经给出了系统所知的全部信息。）例如，当你有一个         Makefile          文件</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       # 不能恰当地生成文件时，这个选项会提供帮助。</span></span></code></pre></div><hr><blockquote><p>参数</p></blockquote><p>目录：指定要显示列表的目录，也可以是具体的文件。</p><hr><blockquote><p>例子</p></blockquote><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ls</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       # 仅列出当前目录可见文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ls</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -l</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 列出当前目录可见文件详细信息</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ls</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -hl</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   # 列出详细信息并以可读大小显示文件大小</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ls</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -al</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   # 列出所有文件（包括隐藏）的详细信息</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ls</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --human-readable</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --size</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --classify</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 按文件大小排序</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">du</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sort</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -h</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 按文件大小排序(同上)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ls</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -a</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 显示当前目录下包括隐藏文件在内的所有文件列表</span></span></code></pre></div><hr><h3 id="目录操作-crud" tabindex="-1">目录操作 （crud） <a class="header-anchor" href="#目录操作-crud" aria-label="Permalink to &quot;目录操作 （crud）&quot;">​</a></h3><h4 id="增-mkdir-mp" tabindex="-1">增 mkdir [-mp] <a class="header-anchor" href="#增-mkdir-mp" aria-label="Permalink to &quot;增 mkdir [-mp]&quot;">​</a></h4><ul><li><p>-m ：配置文件的权限</p><p>如：755</p><p>每个数字代表不同的权限集合，分别为：</p><ul><li>第一个数字<code>7</code>：所有者（user）的权限</li><li>第二个数字<code>5</code>：所属组（group）的权限</li><li>第三个数字<code>5</code>：其他用户（others）的权限</li></ul><p>每个数字是以下权限的组合：</p><ul><li>读权限 (read) - 4</li><li>写权限 (write) - 2</li><li>执行权限 (execute) - 1</li></ul><p>因此，<code>755</code>的具体权限为：</p><ul><li><code>7</code>（所有者）= 4 (读) + 2 (写) + 1 (执行) = 7</li><li><code>5</code>（所属组）= 4 (读) + 1 (执行) = 5</li><li><code>5</code>（其他用户）= 4 (读) + 1 (执行) = 5</li></ul></li><li><p>-p ：帮助你直接将所需要的目录(包含上一级目录)递归创建起来</p></li></ul><table tabindex="0"><thead><tr><th>命令</th><th>作用</th><th>效果</th></tr></thead><tbody><tr><td><code>mkdir t</code></td><td>创建一个目录</td><td>创建目录t</td></tr><tr><td><code>mkdir -p a/b/c d</code></td><td>创建多级目录,也可以创建多个目录</td><td>创建多级目录a/b/c，和目录d</td></tr><tr><td><code> mkdir -m 755 d</code></td><td>755是权限</td><td></td></tr></tbody></table><h4 id="删目录下的文件-rm-fir" tabindex="-1">删目录下的文件 rm [-fir] <a class="header-anchor" href="#删目录下的文件-rm-fir" aria-label="Permalink to &quot;删目录下的文件 rm [-fir]&quot;">​</a></h4><p>选项与参数：</p><ul><li>-f ：就是 force 的意思，忽略不存在的文件，不会出现警告信息；</li><li>-i ：互动模式，在删除前会询问使用者是否动作</li><li>-r ：递归删除啊！最常用在目录的删除了！这是非常危险的选项！！！</li></ul><table tabindex="0"><thead><tr><th>命令 （a是文件，aa是目录</th><th>作用</th></tr></thead><tbody><tr><td><code>rm a</code></td><td>删除当前目录下的文件 a</td></tr><tr><td><code>rm -f a</code></td><td>删除当前目录的的文件（不询问）</td></tr><tr><td><code>rm -r aa</code></td><td>递归删除当前目录下的aa目录</td></tr><tr><td><code>rm -rf aa</code></td><td>递归删除当前目录下的aa目录（不询问）</td></tr><tr><td><code>rm -rf /**</code></td><td>将根目录下的所有文件全部删除 【自杀命令！慎用！慎用！慎用！】</td></tr></tbody></table><p>rmdir (只能删除空的目录)</p><ul><li>-p 删除指定目录后，若该目录的上层目录已变成空目录，则将其一并删除 | 命令 （aa是目录 | 作用 | | ------------------------ | ------------------------------------------------------------ | | <code>rmdir aa</code> | 删除当前目录下的aa目录 | | <code>rmdir -p www/Test</code> 等同于 <code>rmdir www/Test, rmdir www</code> | 在工作目录下的 www 目录中，删除名为 Test 的子目录。若 Test 删除后，www 目录成为空目录，则 www 亦予删除。 |</li></ul><h4 id="目录修改-mv-和-cp" tabindex="-1">目录修改 mv 和 cp <a class="header-anchor" href="#目录修改-mv-和-cp" aria-label="Permalink to &quot;目录修改 mv 和 cp&quot;">​</a></h4><ul><li>mv 用来对文件或目录重新命名</li></ul><hr><blockquote><p>说明</p></blockquote><p>用来对文件或目录重新命名，或者将文件从一个目录移到另一个目录中。source表示源文件或目录，target表示目标文件或目录。如果将一个文件移到一个已经存在的目标文件中，则目标文件的内容将被覆盖。</p><p>mv命令可以用来将源文件移至一个目标文件中，或将一组文件移至一个目标目录中。源文件被移至目标文件有两种不同的结果：</p><ol><li>如果目标文件是到某一目录文件的路径，源文件会被移到此目录下，且文件名不变。</li><li>如果目标文件不是目录文件，则源文件名（只能有一个）会变为此目标文件名，并覆盖己存在的同名文件。如果源文件和目标文件在同一个目录下，mv的作用就是改文件名。当目标文件是目录文件时，源文件或目录参数可以有多个，则所有的源文件都会被移至目标文件中。所有移到该目录下的文件都将保留以前的文件名。</li></ol><p>注意事项：mv与cp的结果不同，mv好像文件“搬家”，文件个数并未增加。而cp对文件进行复制，文件个数增加了。</p><hr><blockquote><p>语法</p></blockquote><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mv(选项</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">参数</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><hr><blockquote><p>选项</p></blockquote><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">--backup</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">备份模式</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">：若需覆盖文件，则覆盖前先行备份；</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-b：当文件存在时，覆盖前，为其创建一个备份；</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-f：若目标文件或目录与现有的文件或目录重复，则直接覆盖现有的文件或目录；</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-i：交互式操作，覆盖前先行询问用户，如果源文件与目标文件或目标目录中的文件同名，则询问用户是否覆盖目标文件。用户输入”y”，表示将覆盖目标文件；输入”n”，表示取消对源文件的移动。这样可以避免误将文件覆盖。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">--strip-trailing-slashes：删除源文件中的斜杠“/”；</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-S</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;后缀&gt;：为备份文件指定后缀，而不使用默认的后缀；</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">--target-directory</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">目录</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">：指定源文件要移动到目标目录；</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-u：当源文件比目标文件新或者目标文件不存在时，才执行移动操作。</span></span></code></pre></div><hr><blockquote><p>参数</p></blockquote><p>源文件：源文件列表。 目标文件：如果“目标文件”是文件名则在移动文件的同时，将其改名为“目标文件”；如果“目标文件”是目录名则将源文件移动到“目标文件”下。</p><hr><blockquote><p>实例</p></blockquote><table tabindex="0"><thead><tr><th>命令</th><th>作用</th></tr></thead><tbody><tr><td><code>mv /usr/men/* .</code></td><td>将目录<code>/usr/men</code>中的所有文件移到当前目录（用<code>.</code>表示）中</td></tr><tr><td><code>mv file_1.txt /home/office/</code></td><td>移动文件</td></tr><tr><td><code>mv file_2.txt file_3.txt file_4.txt /home/office/&lt;br/&gt;mv *.txt /home/office/</code></td><td>移动多个文件</td></tr><tr><td><code>mv directory_1/ /home/office/</code></td><td>移动目录</td></tr><tr><td><code>mv file_1.txt file_2.txt # 将文件file_1.txt改名为file_2.txt</code></td><td>重命名文件或目录</td></tr><tr><td><code>mv directory_1/ directory_2/</code></td><td>重命名目录</td></tr><tr><td><code>mv -v *.txt /home/office</code></td><td>打印移动信息</td></tr><tr><td><code>mv -i file_1.txt /home/office</code></td><td>提示是否覆盖文件</td></tr><tr><td><code>mv -uv *.txt /home/office</code></td><td>源文件比目标文件新时才执行更新</td></tr><tr><td><code>mv -vn *.txt /home/office</code></td><td>不要覆盖任何已存在的文件</td></tr><tr><td><code>mv -bv *.txt /home/office</code></td><td>复制时创建备份</td></tr><tr><td><code>mv -f *.txt /home/office</code></td><td>无条件覆盖已经存在的文件</td></tr></tbody></table><hr><ul><li>cp (复制文件或目录) <code>cp [-adfilprsu] 来源档(source) 目标档(destination)</code><ul><li>-a：相当於 -pdr 的意思，至於 pdr 请参考下列说明；(常用)</li><li>-d：若来源档为连结档的属性(link file)，则复制连结档属性而非文件本身；</li><li>-f：为强制(force)的意思，若目标文件已经存在且无法开启，则移除后再尝试一次；</li><li>-i：若目标档(destination)已经存在时，在覆盖时会先询问动作的进行(常用)</li><li>-l：进行硬式连结(hard link)的连结档创建，而非复制文件本身；</li><li>-p：连同文件的属性一起复制过去，而非使用默认属性(备份常用)；</li><li>-r：递归持续复制，用於目录的复制行为；(常用)</li><li>-s：复制成为符号连结档 (symbolic link)，亦即『捷径』文件；</li><li>-u：若 destination 比 source 旧才升级 destination ！</li></ul></li></ul>`,74),t=[p];function h(e,k,d,r,c,o){return a(),i("div",null,t)}const y=s(l,[["render",h]]);export{F as __pageData,y as default};
