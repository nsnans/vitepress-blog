import{_ as s,c as t,o as a,j as e,a as o}from"./chunks/framework.CGZT024R.js";const b=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"web/js&ts/js隐式转换.md","filePath":"web/js&ts/js隐式转换.md"}'),n={name:"web/js&ts/js隐式转换.md"},r=e("h2",{id:"js隐式转换",tabindex:"-1"},[o("js隐式转换 "),e("a",{class:"header-anchor",href:"#js隐式转换","aria-label":'Permalink to "js隐式转换"'},"​")],-1),c=e("p",null,"一、字符串+任意类型都转为字符串连接 二、boolean、null、undefined+任意类型，先转换数字，然后再进行数字运算，字符串类型除外，因为字符串类型优先级最高 三、{}+任意类型，{}固定变成[object Object]。注意：直接使用{}+任意类型，{}会被当成代码块执行，你可以声明变量={}，不然会出现以下奇怪的结果：{}+1=1，{}+[]=0，{}+['有']=NaN 四、[]+任意类型，都会先转成字符串，转换规则是根据数组每一项按上面规则转换后join(',')，然后再与任何类型进行字符串拼接",-1),_=[r,c];function d(i,l,j,p,h,f){return a(),t("div",null,_)}const u=s(n,[["render",d]]);export{b as __pageData,u as default};
